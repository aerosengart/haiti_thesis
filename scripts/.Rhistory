beta2 = box[1, "beta2"],
beta3 = box[1, "beta3"],
beta4 = box[1, "beta4"],
beta5 = box[1, "beta5"],
beta6 = box[1, "beta6"],
nu = box[1, "nu"]),
upper = c(tau = box[2, "tau"],
beta1 = box[2, "beta1"],
beta2 = box[2, "beta2"],
beta3 = box[2, "beta3"],
beta4 = box[2, "beta4"],
beta5 = box[2, "beta5"],
beta6 = box[2, "beta6"],
nu = box[2, "nu"]),
nprof = 10)
guesses <- guesses %>%
mutate(gamma = gamma, sigma = sigma, theta0 = theta0, alpha = alpha,
mu = mu, delta = delta, nu = nu, S_0 = max_liks[1, "S_0"], E_0 = max_liks[1, "E_0"],
I_0 = max_liks[1, "I_0"], A_0 = A_0, R_0 = R_0, pop_0 = pop_haiti)
write.csv(guesses, file = "/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_rho.csv")
View(box)
1100000*1.4*e-06
1100000*.0000014*e-06
1100000*.0000014
1100000*.000008
guesses <- profile_design(rho = seq(1E-8, 0.999, length = 50),
lower = c(tau = box[1, "tau"],
beta1 = box[1, "beta1"],
beta2 = box[1, "beta2"],
beta3 = box[1, "beta3"],
beta4 = box[1, "beta4"],
beta5 = box[1, "beta5"],
beta6 = box[1, "beta6"],
nu = box[1, "nu"],
E_0 = box[1, "E_0"],
I_0 = box[1, "I_0"]),
upper = c(tau = box[2, "tau"],
beta1 = box[2, "beta1"],
beta2 = box[2, "beta2"],
beta3 = box[2, "beta3"],
beta4 = box[2, "beta4"],
beta5 = box[2, "beta5"],
beta6 = box[2, "beta6"],
nu = box[2, "nu"],
E_0 = box[2, "E_0"],
I_0 = box[2, "I_0"]),
nprof = 10)
guesses <- guesses %>%
mutate(gamma = gamma, sigma = sigma, theta0 = theta0, alpha = alpha,
mu = mu, delta = delta, nu = nu, S_0 = 1 - E_0 - I_0, E_0 = E_0,
I_0 = I_0, A_0 = A_0, R_0 = R_0, pop_0 = pop_haiti)
write.csv(guesses, file = "/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_rho.csv")
guesses <- read.csv("/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_rho.csv")
mf1 <- full_mod %>%
window(start = 0, end = episettings$nweeks)
foreach(guess = iter(guesses, "row"), .combine = rbind) %dopar% {
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = 2,
Np = 100,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02,
tau = 0.02, nu = 0.02)) -> mf
replicate(10, mf %>% pfilter(Np=5000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1], loglik.se=ll[2])
} -> results
foreach(guess = iter(guesses, "row"), .combine = rbind) %dopar% {
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = 2,
Np = 100,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.2),
I_0 = ivp(0.2))) -> mf
replicate(10, mf %>% pfilter(Np=5000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1], loglik.se=ll[2])
} -> results
foreach(guess = iter(guesses, "row"), .combine = rbind) %dopar% {
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = 2,
Np = 100,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.02),
I_0 = ivp(0.02))) -> mf
replicate(10, mf %>% pfilter(Np=5000) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1], loglik.se=ll[2])
} -> results
View(box)
spy(full_mod)
source("model1/mod_tools.R")
source("~/Desktop/haiti/model1/Source/scripts/mif_m1.R", echo=TRUE)
# Set Run Level
num_parts <- switch(RUN_LEVEL, 50, 1e3, 5e3)  # Number of particles
num_iters <- switch(RUN_LEVEL, 5, 100, 200)  # Number of MIF iterations
num_profs <- switch(RUN_LEVEL,  1,  3,  10)  # Number of profiles
num_sims <- switch(RUN_LEVEL,  25,  50,  100)  # Number of times pfilter will be run to estimate likelihood
## run level for testing/computing
RUN_LEVEL = 4
## run level for testing/computing
RUN_LEVEL = 3
# Set Run Level
num_parts <- switch(RUN_LEVEL, 50, 1e3, 5e3)  # Number of particles
num_iters <- switch(RUN_LEVEL, 5, 100, 200)  # Number of MIF iterations
num_profs <- switch(RUN_LEVEL,  1,  3,  10)  # Number of profiles
num_sims <- switch(RUN_LEVEL,  25,  50,  100)  # Number of times pfilter will be run to estimate likelihood
## make model
full_mod <- haiti1()
out_dir <- "model1/epi_if/"
episettings <- fix_epi_settings(nprofs = num_profs, nparticles = num_parts, nmif = num_iters)
endsettings <- fix_end_settings(episettings)
pop_haiti <- get_haiti_pop()
set.seed(episettings$seed)
get_mspp_agg_data <- function() {
## Saturday dates represent last day of week cumulatively
allDat <- read_csv("model1/Data/haiti-data-from-2010-10-to-2019-01.csv", skip = 1,
col_names = c("date_sat_orig", "report", "Artibonite",
"Centre", "Grand_Anse", "Nippes", "Nord",
"Nord_Est", "Nord_Ouest", "Ouest", "Sud",
"Sud_Est"), col_types = "cciiiiiiiiii")
splitDate <- strsplit(allDat$date_sat_orig, "-")
setattr(splitDate[[1]], 'names', c("year", "month", "day"))
dateDf <- tibble::as_tibble(as.data.frame(do.call(rbind, splitDate))) %>%
mutate(month = as.character(month)) %>%
mutate(day = as.character(day)) %>%
mutate(year = as.character(year)) %>%
mutate(month = ifelse(nchar(month) == 1, paste0("0", month), month)) %>%
mutate(day = ifelse(nchar(day) == 1, paste0("0", day), day)) %>%
mutate(date_sat = as.Date(paste(year, month, day, sep = "-"), origin = "1900-01-01"))
fullDateVec <- data.frame(date_sat = seq(min(dateDf$date_sat), max(dateDf$date_sat), by = 7))
cleanDat <- allDat %>%
mutate(date_sat = as.Date(dateDf$date_sat, origin = "1900-01-01")) %>%
select(-date_sat_orig) %>%
full_join(fullDateVec, by = c("date_sat")) %>%
arrange(date_sat) %>%
mutate(week = seq_along(date_sat)) %>%
tidyr::gather(department, cases, Artibonite:Sud_Est)
aggDat <- cleanDat %>%
group_by(week) %>% ## "day" or "week"
summarise(cases = sum(cases, na.rm=TRUE))
return(aggDat)
}
haiti.dat <- get_mspp_agg_data() ## get case data (country-wide)
haiti.dat.epi <- haiti.dat %>% dplyr::filter(week <= episettings$nweeks) ## get case data (epidemic period)
## Fixed parameters
gamma <- 7/2 ## 2 day infectious period
sigma <- 7/1.4 ## 1.4 day latent period
theta0 <- 0 ## 0% going to asymptomatic in base model
alpha <- 7/2920 ## 8 year mean duration of natural immunity
## 22.6/1000 average annual birth rate, adjusted for compounding by week
mu <- ((1+22.6/1000)^(1/52.14))-1
## 7.5/1000 average annual death rate, adjusted for compounding by week
delta <- ((1+7.5/1000)^(1/52.14))-1
## starting states
E0 <- 10/pop0 ## rpois(nsamps, 10)/pop
I0 <- 10/pop0 ## rpois(nsamps, 10)/pop
A0 <- 0.0/pop0
R0 <- 0.000
S0 <- 1-R0-I0-E0-A0
## beta parameter settings
blo <- 1E-9; bup <- 10 ## uniform beta settings
source("~/Desktop/haiti/model1/Source/scripts/mif_m1.R", echo=TRUE)
## median R0 among init values: median(exp(rnorm(1000, log(bmn), bse)))*2/7
bmn <- 4.5; bse <- 0.5
## nu parameter settings
nlo <- 0.95; nup <- 1
rhosamps <- profile_design(rho = seq(1E-8, 1, length = 30),
upper = c(tau = 20, beta1 = bup, beta2 = bup,
beta3 = bup, beta4 = bup, beta5 = bup,
beta6 = bup, nu = nup),
lower = c(tau = 1, beta1 = blo, beta2 = blo,
beta3 = blo, beta4 = blo, beta5 = blo,
beta6 = blo, nu = nlo),
nprof = nprofs)
tausamps <- profile_design(tau = seq(1, 20, length = 30),
upper = c(rho = 1, beta1 = bup, beta2 = bup,
beta3 = bup, beta4 = bup, beta5 = bup,
beta6 = bup, nu = nup),
lower = c(rho = 1E-8, beta1 = blo, beta2 = blo,
beta3 = blo, beta4 = blo, beta5 = blo,
beta6 = blo, nu = nlo),
nprof = nprofs)
nprofs
num_profs
rhosamps <- profile_design(rho = seq(1E-8, 1, length = 30),
upper = c(tau = 20, beta1 = bup, beta2 = bup,
beta3 = bup, beta4 = bup, beta5 = bup,
beta6 = bup, nu = nup),
lower = c(tau = 1, beta1 = blo, beta2 = blo,
beta3 = blo, beta4 = blo, beta5 = blo,
beta6 = blo, nu = nlo),
nprof =10)
guesses<-read.csv(file="/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_sigmasq.csv")
library(pomp)
library(haitipkg)
library(foreach)
library(doParallel)
library(doRNG)
library(tidyverse)
library(dplyr)
library(haitipkg)
cores <- as.numeric(Sys.getenv('SLURM_NTASKS_PER_NODE', unset = NA))
if(is.na(cores)) cores <- 20
registerDoParallel(cores)
## run level for testing/computing
RUN_LEVEL = 1
# nprofs <- switch(RUN_LEVEL, 1, 3, 10, 15)  # number of profiles
nparticles <- switch(RUN_LEVEL, 100, 1000, 5000, 10000) # number of particles
nmifs <- switch(RUN_LEVEL, 2, 5, 100, 150) # number of mif iterations
nsims <- switch(RUN_LEVEL, 5, 10, 15, 25) # number of simulations
## make model
full_mod <- haiti1()
mf1 <- full_mod %>%
window(start = 0, end = 232)
foreach(guess = iter(guesses, "row"), .combine = rbind) %dopar% {
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.2), I_0 = ivp(0.2))) -> mf
replicate(nsims, mf %>% pfilter(Np = nparticles) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1], loglik.se=ll[2])
} -> results
guesses<-read.csv(file="/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_sigmasq.csv")
mf1 <- full_mod %>%
window(start = 0, end = 232)
foreach(guess = iter(guesses, "row"), .combine = rbind) %dopar% {
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.2), I_0 = ivp(0.2))) -> mf
replicate(nsims, mf %>% pfilter(Np = nparticles) %>% logLik()) %>%
logmeanexp(se=TRUE) -> ll
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1], loglik.se=ll[2])
} -> results
guess <- guesses[1,]
View(guess)
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.2), I_0 = ivp(0.2))) -> mf
spy(mf1)
View(guesses)
guesses  <- guesses[, -1]
mf1 <- full_mod %>%
window(start = 0, end = 232)
guess <- guesses[1,]
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.2), I_0 = ivp(0.2))) -> mf
spy(mf1)
View(mf1)
mf1 %>%
mif2(params = guess,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.02), I_0 = ivp(0.02))) -> mf
mf1@partrans
mf1 %>%
mif2(params = guess,
partrans = mf1@partrans,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.02), I_0 = ivp(0.02))) -> mf
library(plyr)
library(tidyverse)
library(pomp)
library(devtools)
library(data.table)
library(ggplot2)
library(foreach)
library(doParallel)
library(doRNG)
library(iterators)
library(pkgbuild)
library(gridExtra)
library(GGally)
library(subplex)
library(dplyr)
library(purrr)
library(readr)
# source("mod_build.R")
source("mod_fc_build.R")
source("forecast_tools.R")
source("mod_fit.R")
source("mod_vis.R")
source("mod_tools.R")
devtools::install_git("https://github.com/cbreto/panelPomp.git")
library(panelPomp)
devtools::install_git("https://github.com/zjiang2/haitipkg.git")
library(haitipkg)
registerDoParallel(cores=6)
guesses <- profile_design(sigma_sq = seq(1E-8, 20, length = 50),
guesses <- profile_design(sigma_sq = seq(1E-8, 20, length = 50),
)
)
guesses <- profile_design(sigma_sq = seq(1E-8, 20, length = 50),
lower = c(rho = box[1, "rho"],
tau = box[1, "tau"],
beta1 = box[1, "beta1"],
beta2 = box[1, "beta2"],
beta3 = box[1, "beta3"],
beta4 = box[1, "beta4"],
beta5 = box[1, "beta5"],
beta6 = box[1, "beta6"],
nu = box[1, "nu"]),
upper = c(rho = box[2, "rho"],
tau = box[2, "tau"],
beta1 = box[2, "beta1"],
beta2 = box[2, "beta2"],
beta3 = box[2, "beta3"],
beta4 = box[2, "beta4"],
beta5 = box[2, "beta5"],
beta6 = box[2, "beta6"],
nu = box[2, "nu"]),
nprof = 15)
## get haiti population (country-wide)
pop_haiti <- get_haiti_pop()
## get case data (country-wide)
# haiti_dat <- get_mspp_agg_data()
haiti_dat <- haiti1_agg_data()
episettings <- fix_epi_settings(nprofs = 3, nparticles = 5000, nmif = 150)
fcsettings <- fix_fc_vac_settings("id0", nsims = 25)
## get case data (epidemic period)
haiti_dat_epi <- haiti_dat %>% dplyr::filter(week <= episettings$nweeks)
## get case data (endemic period)
haiti_dat_end <- haiti_dat %>% dplyr::filter(week > episettings$nweeks) %>%
dplyr::mutate(week_end = seq_along(week))
## make table of covariates for seasonality
# covartab <- make_covartab(0, nrow(haiti_dat) + fcsettings$horizon + 1, byt = 1,
#                           degree = 6, nbasis = 6, per = 52.14)
# full_mod <- mod_build(dat = haiti_dat, covar = covartab)
full_mod <- haiti1()
## Fixed parameters
gamma <- 7/2 ## 2 day infectious period
sigma <- 7/1.4 ## 1.4 day latent period
theta0 <- 0 ## 0% going to asymptomatic in base model
alpha <- 7/2920 ## 8 year mean duration of natural immunity
## 22.6/1000 average annual birth rate, adjusted for compounding by week
mu <- ((1+22.6/1000)^(1/52.14))-1
## 7.5/1000 average annual death rate, adjusted for compounding by week
delta <- ((1+7.5/1000)^(1/52.14))-1
## starting states
A_0 <- 0.0
R_0 <- 0.0
guesses <- profile_design(sigma_sq = seq(1E-8, 20, length = 50),
lower = c(rho = box[1, "rho"],
tau = box[1, "tau"],
beta1 = box[1, "beta1"],
beta2 = box[1, "beta2"],
beta3 = box[1, "beta3"],
beta4 = box[1, "beta4"],
beta5 = box[1, "beta5"],
beta6 = box[1, "beta6"],
nu = box[1, "nu"]),
upper = c(rho = box[2, "rho"],
tau = box[2, "tau"],
beta1 = box[2, "beta1"],
beta2 = box[2, "beta2"],
beta3 = box[2, "beta3"],
beta4 = box[2, "beta4"],
beta5 = box[2, "beta5"],
beta6 = box[2, "beta6"],
nu = box[2, "nu"]),
nprof = 15)
epi_par_sets <- list.files("report_data/adj2_epi", "parest_if_")
epi_par_sets_fullpath <- paste0("report_data/adj2_epi/", epi_par_sets)
epi_par_df <- map_dfr(1:length(epi_par_sets_fullpath), function(i) {
read_csv(epi_par_sets_fullpath[i], col_types = cols())
})
box <- epi_par_df %>%
filter(loglik>max(loglik)-50) %>%
sapply(range)
box <- data.frame(apply(box, 2, function(x) as.numeric(as.character(x))))
max_liks <- box %>%
filter(loglik  == max(loglik))
guesses <- profile_design(sigma_sq = seq(1E-8, 20, length = 50),
lower = c(rho = box[1, "rho"],
tau = box[1, "tau"],
beta1 = box[1, "beta1"],
beta2 = box[1, "beta2"],
beta3 = box[1, "beta3"],
beta4 = box[1, "beta4"],
beta5 = box[1, "beta5"],
beta6 = box[1, "beta6"],
nu = box[1, "nu"]),
upper = c(rho = box[2, "rho"],
tau = box[2, "tau"],
beta1 = box[2, "beta1"],
beta2 = box[2, "beta2"],
beta3 = box[2, "beta3"],
beta4 = box[2, "beta4"],
beta5 = box[2, "beta5"],
beta6 = box[2, "beta6"],
nu = box[2, "nu"]),
nprof = 15)
guesses <- guesses %>%
mutate(gamma = gamma, sigma = sigma, theta0 = theta0, alpha = alpha,
mu = mu, delta = delta, nu = nu, S_0 = 1 - 20 / pop_haiti, E_0 = 10 / pop_haiti,
I_0 = 10 / pop_haiti, A_0 = 0.0, R_0 = 0.0, pop_0 = pop_haiti)
write.csv(guesses, file = "/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_sigmasq.csv")
guesses <- profile_design(sig_sq = seq(1E-8, 20, length = 50),
lower = c(rho = box[1, "rho"],
tau = box[1, "tau"],
beta1 = box[1, "beta1"],
beta2 = box[1, "beta2"],
beta3 = box[1, "beta3"],
beta4 = box[1, "beta4"],
beta5 = box[1, "beta5"],
beta6 = box[1, "beta6"],
nu = box[1, "nu"]),
upper = c(rho = box[2, "rho"],
tau = box[2, "tau"],
beta1 = box[2, "beta1"],
beta2 = box[2, "beta2"],
beta3 = box[2, "beta3"],
beta4 = box[2, "beta4"],
beta5 = box[2, "beta5"],
beta6 = box[2, "beta6"],
nu = box[2, "nu"]),
nprof = 15)
guesses <- guesses %>%
mutate(gamma = gamma, sigma = sigma, theta0 = theta0, alpha = alpha,
mu = mu, delta = delta, nu = nu, S_0 = 1 - 20 / pop_haiti, E_0 = 10 / pop_haiti,
I_0 = 10 / pop_haiti, A_0 = 0.0, R_0 = 0.0, pop_0 = pop_haiti)
write.csv(guesses, file = "/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_sigmasq.csv")
guesses <- read.csv("/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_sigmasq.csv")
guess <- guesses[1,]
guesses<-read.csv(file="/Users/aerosengart/Desktop/haiti/model1/Source/profile_likelihoods/initial_guesses_sigmasq.csv")
guesses  <- guesses[, -1]
View(guesses)
mf1 <- full_mod %>%
window(start = 0, end = 232)
coef(mf1) <- guess
guess <- guesses[1,]
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
partrans = mf1@partrans,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.02), I_0 = ivp(0.02))) -> mf
coef(mf1) <- guess
mf1 %>%
mif2(params = guess,
partrans = mf1@partrans,
Nmif = nmifs,
Np = nparticles,
cooling.type = "hyperbolic",
cooling.fraction.50 = 0.5,
rw.sd(beta1 = .02, beta2 = .02, beta3 = .02,
beta4 = .02, beta5 = .02, beta6 = .02, rho = 0.02,
tau = 0.02, nu = 0.02, E_0 = ivp(0.2), I_0 = ivp(0.2))) -> mf
View(mf1)
load("/Users/aerosengart/Desktop/haiti/model1/Source/scripts/joint_mif.rda")
View(prof_if)
